-- Database migration to add tipHash and transaction tracking fields
-- Run this after deploying the new secure contract

-- Add tipHash field to farcaster_tips table
ALTER TABLE farcaster_tips 
ADD COLUMN IF NOT EXISTS tip_hash VARCHAR(66); -- 0x + 64 hex chars

-- Add transaction hash fields for allocation and claiming
ALTER TABLE farcaster_tips 
ADD COLUMN IF NOT EXISTS allocation_tx_hash VARCHAR(66),
ADD COLUMN IF NOT EXISTS claim_tx_hash VARCHAR(66),
ADD COLUMN IF NOT EXISTS claimed_at TIMESTAMP;

-- Create index on tip_hash for fast lookups
CREATE INDEX IF NOT EXISTS idx_farcaster_tips_hash ON farcaster_tips(tip_hash);

-- Add unique constraint to prevent duplicate tipHashes
ALTER TABLE farcaster_tips 
ADD CONSTRAINT unique_tip_hash UNIQUE (tip_hash);

-- Update status enum to include new values if needed
-- Note: PostgreSQL doesn't have enum modifications, so we'll just use VARCHAR
-- The application will validate: 'PENDING', 'ALLOCATED', 'CLAIMED', 'FAILED'

-- Add comment for documentation
COMMENT ON COLUMN farcaster_tips.tip_hash IS 'Cryptographically secure hash generated by backend to prevent replay attacks';
COMMENT ON COLUMN farcaster_tips.allocation_tx_hash IS 'Transaction hash for allocateTip contract call';
COMMENT ON COLUMN farcaster_tips.claim_tx_hash IS 'Transaction hash for claimTip contract call';

-- Example query to check the new fields
-- SELECT tip_hash, allocation_tx_hash, status, created_at FROM farcaster_tips ORDER BY created_at DESC LIMIT 5;